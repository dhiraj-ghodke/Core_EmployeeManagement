@using EM.Models

@model IEnumerable<EM.Models.EmployeeEducationMetadata>

<div class="container-fluid mt-3">
    @if (Model != null && Model.Count() > 0)
    {

        using (Html.BeginForm("EducationalDetails", "EmployeeV1", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            <h1>Educational Information</h1>
            <p>Fill all your educational details as per documents</p>

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <br />
            <div id="newEducation">
                @foreach (var item in Model)
                {
                <div class="row">
                    @*@Html.HiddenFor(model => item.EducationId)*@
                    <input type="hidden" name="EducationId" value="@item.EducationId" />
                    <div class="col-5 p-3">
                        <div class="form-floating">
                            @Html.DropDownList("EducationTypeId",
                            ((IEnumerable<SelectListItem>)ViewBag.EducationTypeIdList).
                            Select(edu => {
                                if (edu.Value.Equals(item.EducationTypeId.ToString())) {
                                    return new SelectListItem()
                                    {
                                        Value = edu.Value,
                                        Text = edu.Text,
                                        Selected = true
                                    };
                                }
                                else
                                {
                                    return edu;
                                }
                            }),
                           htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => item.EducationTypeId, "", new { @class = "text-danger" })
                            @Html.LabelFor(model => item.EducationTypeId, "EducationTypeId", new { @for = "EducationTypeId" })
                        </div>
                        <div class="form-floating">
                            @*@Html.EditorFor(model => item.PassoutYear, new { htmlAttributes = new { @class = "form-control", name = "PassoutYear" } })*@
                            <input type="text" class="form-control" name="PassoutYear" value="@item.PassoutYear" />
                            @Html.ValidationMessageFor(model => item.PassoutYear, "", new { @class = "text-danger" })
                            @Html.LabelFor(model => item.PassoutYear, new { @for = "PassoutYear" })
                        </div>
                    </div>
                    <div class="col-6 p-3">
                        <div class="form-floating">
                            @*@Html.EditorFor(model => item.Specialization, new { htmlAttributes = new { @class = "form-control", name = "Specialization" } })*@
                            <input type="text" class="form-control" name="Specialization" value="@item.Specialization" />
                            @Html.ValidationMessageFor(model => item.Specialization, "", new { @class = "text-danger" })
                            @Html.LabelFor(model => item.Specialization, new { @for = "Specialization" })
                        </div>
                        <div class="form-floating">
                            @*@Html.EditorFor(model => item.Percentage, new { htmlAttributes = new { @class = "form-control", name = "Percentage" } })*@
                            <input type="text" class="form-control" name="Percentage" value="@item.Percentage" />
                            @Html.ValidationMessageFor(model => item.Percentage, "", new { @class = "text-danger" })
                            @Html.LabelFor(model => item.Percentage, new { @for = "Percentage" })
                        </div>
                        <div class="form-floating">
                            @*@Html.EditorFor(model => item.CollegeName, new { htmlAttributes = new { @class = "form-control", name = "CollegeName" } })*@
                            <input type="text" class="form-control" name="CollegeName" value="@item.CollegeName" />
                            @Html.ValidationMessageFor(model => item.CollegeName, "", new { @class = "text-danger" })
                            @Html.LabelFor(model => item.CollegeName, new { @for = "CollegeName" })
                        </div>                        
                    </div>
                    <div class="col-1 p-3">
                        <div class="form-floating">
                            @Html.ActionLink("remove", "DeleteEducation", new { educationId = item.EducationId })
                        </div>
                    </div>
                    </div>
                    <hr />
                    }
                </div>
            <input type="button" id="btnAddMainEducation" value="Add new education form" class="form-control btn btn-success float-start" />

            <br /><br />
            <div class="form-floating">
                <input type="submit" value="Save Educational Details" class="btn btn-primary float-end" />
            </div>
            <br /><br />
        }
    }
    else
    {
        <h3>Fill all your educational details as per documents</h3>
        @*@Html.ActionLink("Educational Details", "EducationalDetails", "EmployeeV1", null, new { @class = "nav-link active", ariaCurrent = "page" })*@
        @Html.Partial("_CreateEducationalDetails", new EmployeeEducationMetadata())
        <br /><br />
    }
</div>

<script>
    $(function () {
        // $('#newEducation').show();
        $("#btnAddMainEducation").click(function () {
            // var div = $("#newEducation").html();
            //var div = $("#newEducation").html();
            //if (sessionStorage.getItem('newEducation') == null ||
            //    sessionStorage.getItem('newEducation') == undefined) {
            //    sessionStorage.setItem('newEducation', div);
            //}

            $.get("EducationalNewForm", function (div) {
                if (sessionStorage.getItem('newEducation') == null ||
                    sessionStorage.getItem('newEducation') == undefined) {
                    sessionStorage.setItem('newEducation', div);
                }
            }, 'html');

            $("#newEducation").append(sessionStorage.getItem('newEducation'));
        });
    });
</script>
