// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace EM.Core.Models.Entities;

public partial class AspNetUser
{
    [Key]
    [StringLength(128)]
    public string Id { get; set; }

    [StringLength(256)]
    public string Email { get; set; }

    public bool EmailConfirmed { get; set; }

    public string PasswordHash { get; set; }

    public string SecurityStamp { get; set; }

    public string PhoneNumber { get; set; }

    public bool PhoneNumberConfirmed { get; set; }

    public bool TwoFactorEnabled { get; set; }

    [Column(TypeName = "datetime")]
    public DateTime? LockoutEndDateUtc { get; set; }

    public bool LockoutEnabled { get; set; }

    public int AccessFailedCount { get; set; }

    [Required]
    [StringLength(256)]
    public string UserName { get; set; }

    [InverseProperty("User")]
    public virtual ICollection<AspNetUserClaim> AspNetUserClaims { get; set; } = new List<AspNetUserClaim>();

    [InverseProperty("User")]
    public virtual ICollection<AspNetUserLogin> AspNetUserLogins { get; set; } = new List<AspNetUserLogin>();

    [InverseProperty("CreatedByNavigation")]
    public virtual ICollection<Company> Companies { get; set; } = new List<Company>();

    [InverseProperty("CreatedByNavigation")]
    public virtual ICollection<CompanyDocument> CompanyDocuments { get; set; } = new List<CompanyDocument>();

    [InverseProperty("User")]
    public virtual ICollection<EmployeeEducation> EmployeeEducations { get; set; } = new List<EmployeeEducation>();

    [InverseProperty("User")]
    public virtual ICollection<EmployeeExperiece> EmployeeExperieces { get; set; } = new List<EmployeeExperiece>();

    [InverseProperty("User")]
    public virtual ICollection<EmployeeITExperience> EmployeeITExperiences { get; set; } = new List<EmployeeITExperience>();

    [InverseProperty("User")]
    public virtual ICollection<EmployeeIncrement> EmployeeIncrements { get; set; } = new List<EmployeeIncrement>();

    [InverseProperty("User")]
    public virtual ICollection<EmployeeInterview> EmployeeInterviews { get; set; } = new List<EmployeeInterview>();

    [InverseProperty("User")]
    public virtual ICollection<EmployeeResignation> EmployeeResignations { get; set; } = new List<EmployeeResignation>();

    [InverseProperty("User")]
    public virtual ICollection<Employee> Employees { get; set; } = new List<Employee>();

    [InverseProperty("User")]
    public virtual ICollection<UserRole> UserRoles { get; set; } = new List<UserRole>();

    [ForeignKey("UserId")]
    [InverseProperty("Users")]
    public virtual ICollection<AspNetRole> Roles { get; set; } = new List<AspNetRole>();
}