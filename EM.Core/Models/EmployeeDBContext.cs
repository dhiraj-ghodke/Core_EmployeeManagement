// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using EM.Core.Models.Entities;
using Microsoft.EntityFrameworkCore;

namespace EM.Core.Models;

public partial class EmployeeDBContext : DbContext
{
    public EmployeeDBContext(DbContextOptions<EmployeeDBContext> options)
        : base(options)
    {
    }

    public virtual DbSet<AspNetRole> AspNetRoles { get; set; }

    public virtual DbSet<AspNetUser> AspNetUsers { get; set; }

    public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }

    public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }

    public virtual DbSet<Batch> Batches { get; set; }

    public virtual DbSet<Company> Companies { get; set; }

    public virtual DbSet<CompanyDocument> CompanyDocuments { get; set; }

    public virtual DbSet<CompanyDocumentConfigurableValue> CompanyDocumentConfigurableValues { get; set; }

    public virtual DbSet<CompanyDocumentsType> CompanyDocumentsTypes { get; set; }

    public virtual DbSet<Employee> Employees { get; set; }

    public virtual DbSet<EmployeeBankAccount> EmployeeBankAccounts { get; set; }

    public virtual DbSet<EmployeeEducation> EmployeeEducations { get; set; }

    public virtual DbSet<EmployeeEducationType> EmployeeEducationTypes { get; set; }

    public virtual DbSet<EmployeeExperiece> EmployeeExperieces { get; set; }

    public virtual DbSet<EmployeeITExperience> EmployeeITExperiences { get; set; }

    public virtual DbSet<EmployeeIncrement> EmployeeIncrements { get; set; }

    public virtual DbSet<EmployeeInterview> EmployeeInterviews { get; set; }

    public virtual DbSet<EmployeeResignation> EmployeeResignations { get; set; }

    public virtual DbSet<Team> Teams { get; set; }

    public virtual DbSet<UserRole> UserRoles { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<AspNetRole>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_dbo.AspNetRoles");
        });

        modelBuilder.Entity<AspNetUser>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_dbo.AspNetUsers");

            entity.HasMany(d => d.Roles).WithMany(p => p.Users)
                .UsingEntity<Dictionary<string, object>>(
                    "AspNetUserRole",
                    r => r.HasOne<AspNetRole>().WithMany()
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK_dbo.AspNetUserRoles_dbo.AspNetRoles_RoleId"),
                    l => l.HasOne<AspNetUser>().WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_dbo.AspNetUserRoles_dbo.AspNetUsers_UserId"),
                    j =>
                    {
                        j.HasKey("UserId", "RoleId").HasName("PK_dbo.AspNetUserRoles");
                        j.ToTable("AspNetUserRoles");
                        j.IndexerProperty<string>("UserId").HasMaxLength(128);
                        j.IndexerProperty<string>("RoleId").HasMaxLength(128);
                    });
        });

        modelBuilder.Entity<AspNetUserClaim>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_dbo.AspNetUserClaims");

            entity.HasOne(d => d.User).WithMany(p => p.AspNetUserClaims).HasConstraintName("FK_dbo.AspNetUserClaims_dbo.AspNetUsers_UserId");
        });

        modelBuilder.Entity<AspNetUserLogin>(entity =>
        {
            entity.HasKey(e => new { e.LoginProvider, e.ProviderKey, e.UserId }).HasName("PK_dbo.AspNetUserLogins");

            entity.HasOne(d => d.User).WithMany(p => p.AspNetUserLogins).HasConstraintName("FK_dbo.AspNetUserLogins_dbo.AspNetUsers_UserId");
        });

        modelBuilder.Entity<Batch>(entity =>
        {
            entity.HasKey(e => e.BatchId).HasName("PK__Batch__5D55CE589F120BBB");
        });

        modelBuilder.Entity<Company>(entity =>
        {
            entity.HasKey(e => e.CompanyId).HasName("PK__Company__2D971CACDD8287B0");

            entity.HasOne(d => d.CreatedByNavigation).WithMany(p => p.Companies)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK__Company__Created__66603565");
        });

        modelBuilder.Entity<CompanyDocument>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__CompanyD__3214EC07B6632A45");

            entity.HasOne(d => d.CompanyDocumentsType).WithMany(p => p.CompanyDocuments).HasConstraintName("FK__CompanyDo__Compa__0F624AF8");

            entity.HasOne(d => d.Company).WithMany(p => p.CompanyDocuments).HasConstraintName("FK__CompanyDo__Compa__6C190EBB");

            entity.HasOne(d => d.CreatedByNavigation).WithMany(p => p.CompanyDocuments)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK__CompanyDo__Creat__6B24EA82");
        });

        modelBuilder.Entity<CompanyDocumentConfigurableValue>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__CompanyD__3214EC0705601DE8");

            entity.HasOne(d => d.CompanyDocument).WithMany(p => p.CompanyDocumentConfigurableValues)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK__CompanyDo__Compa__4D5F7D71");

            entity.HasOne(d => d.Company).WithMany(p => p.CompanyDocumentConfigurableValues).HasConstraintName("FK__CompanyDo__Compa__1AD3FDA4");
        });

        modelBuilder.Entity<CompanyDocumentsType>(entity =>
        {
            entity.HasKey(e => e.DocumentTypeId).HasName("PK__CompanyD__DBA390E114A8D7CA");
        });

        modelBuilder.Entity<Employee>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Employee__3214EC07C3D75858");

            entity.Property(e => e.CurrentDesignation).HasDefaultValue("Software Engineer");
            entity.Property(e => e.OfferDesignation).HasDefaultValue("Trainee Engineer");

            entity.HasOne(d => d.Company).WithMany(p => p.Employees).HasConstraintName("FK__Employee__Compan__6754599E");

            entity.HasOne(d => d.User).WithMany(p => p.Employees)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK__Employee__UserId__4AB81AF0");
        });

        modelBuilder.Entity<EmployeeBankAccount>(entity =>
        {
            entity.HasKey(e => e.AccountId).HasName("PK__Employee__349DA5A62B364612");
        });

        modelBuilder.Entity<EmployeeEducation>(entity =>
        {
            entity.HasKey(e => e.EducationId).HasName("PK__Employee__4BBE38055FE36C82");

            entity.HasOne(d => d.EducationType).WithMany(p => p.EmployeeEducations).HasConstraintName("FK__EmployeeE__Educa__5BE2A6F2");

            entity.HasOne(d => d.User).WithMany(p => p.EmployeeEducations)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK__EmployeeE__UserI__5CD6CB2B");
        });

        modelBuilder.Entity<EmployeeEducationType>(entity =>
        {
            entity.HasKey(e => e.EducationTypeId).HasName("PK__Employee__D24CA013D0B779ED");
        });

        modelBuilder.Entity<EmployeeExperiece>(entity =>
        {
            entity.HasKey(e => e.ExperienceId).HasName("PK__Employee__2F4E34495EB9599A");

            entity.HasOne(d => d.Account).WithMany(p => p.EmployeeExperieces)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK__EmployeeE__Accou__5DCAEF64");

            entity.HasOne(d => d.User).WithMany(p => p.EmployeeExperieces)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK__EmployeeE__UserI__5EBF139D");
        });

        modelBuilder.Entity<EmployeeITExperience>(entity =>
        {
            entity.HasKey(e => e.ExperienceId).HasName("PK__Employee__2F4E344963531713");

            entity.HasOne(d => d.BankAccount).WithMany(p => p.EmployeeITExperiences)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK__EmployeeI__BankA__6E01572D");

            entity.HasOne(d => d.Batch).WithMany(p => p.EmployeeITExperiences).HasConstraintName("FK__EmployeeI__Batch__1AD3FDA4");

            entity.HasOne(d => d.Team).WithMany(p => p.EmployeeITExperiences).HasConstraintName("FK__EmployeeI__TeamI__1BC821DD");

            entity.HasOne(d => d.User).WithMany(p => p.EmployeeITExperiences)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK__EmployeeI__UserI__6383C8BA");
        });

        modelBuilder.Entity<EmployeeIncrement>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Employee__3214EC071D71C395");

            entity.HasOne(d => d.User).WithMany(p => p.EmployeeIncrements)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK__EmployeeI__UserI__4F7CD00D");
        });

        modelBuilder.Entity<EmployeeInterview>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Employee__3214EC076C888DF4");

            entity.HasOne(d => d.User).WithMany(p => p.EmployeeInterviews)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK__EmployeeI__UserI__60A75C0F");
        });

        modelBuilder.Entity<EmployeeResignation>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Employee__3214EC07614ED2B9");

            entity.HasOne(d => d.User).WithMany(p => p.EmployeeResignations)
                .OnDelete(DeleteBehavior.Cascade)
                .HasConstraintName("FK__EmployeeR__UserI__6477ECF3");
        });

        modelBuilder.Entity<Team>(entity =>
        {
            entity.HasKey(e => e.TeamId).HasName("PK__Team__123AE799E93CCD58");
        });

        modelBuilder.Entity<UserRole>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__UserRole__3214EC072C3A944C");

            entity.HasOne(d => d.Role).WithMany(p => p.UserRoles).HasConstraintName("FK__UserRoles__RoleI__40058253");

            entity.HasOne(d => d.User).WithMany(p => p.UserRoles).HasConstraintName("FK__UserRoles__UserI__3F115E1A");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}